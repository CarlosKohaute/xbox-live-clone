// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  favorites Favorite[]
  orders Order[]
  @@map("user")
}

model Product {
  id          String   @id @default(uuid())
  name        String   @unique
  description String
  price       Float
  image       String
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  category Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  categoryId String? @map("category_id")

  favorites Favorite[]
  orders Order[]
  @@map("product")
}

model Genre{
  id String @id @default(uuid())
  genre String @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("Updated_at")

  orders Order[]
  @@map("genre")
}

model Category{
  id String @id @default(uuid())
  name String @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("Updated_at")

  products Product[]

  @@map("category")
}

model Favorite{
  id String @id @default(uuid())
  createdAt DateTime @default(now()) @map("created_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @map("user_id")

  product Product @relation(fields: [productName], references: [name], onDelete: Cascade)
  productName String @map("product__name")


  @@map("favorite")
  @@unique([userId, productName])
}
model Order{
  id String @id @default(uuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("Updated_at")

  genre Genre? @relation(fields: [genreName], references: [genre], onDelete: SetNull)
  genreName String? @map("Profile genre game")

  user User? @relation(fields: [userId], references: [id], onDelete: SetNull)
  userId String? @map("user_id")

  products Product[]
  
  @@map("profile")
}
